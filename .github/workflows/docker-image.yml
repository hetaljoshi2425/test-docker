# # name: Docker Image CI

# # on:
# #   push:
# #     branches: [ "main" ]

# # jobs:

# #   build:

# #     runs-on: ubuntu-latest

# #     steps:
# #     - uses: actions/checkout@v3
# #     - name: Build the Docker image
# #       run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)


name: CI/CD for React App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and push Docker image
        run: |
          docker build -t my-react-app:latest .
          docker tag my-react-app:latest hetaljoshi2425/my-react-app:latest
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push hetaljoshi2425/my-react-app:latest

      - name: Set up SSH connection
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}
          known-hosts: ${{ secrets.SERVER_HOST }}
          ssh-public-key: ${{ secrets.SERVER_SSH_PUBLIC_KEY }}

      - name: Pull Docker image on server
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SERVER_SSH_KEY }} root@139.84.192.213 'docker pull my-react-app:latest'

      # - name: Deploy to Server
      #   run: |
          # ssh -i ${{ secrets.SERVER_SSH_KEY }} root@139.84.192.213 "docker pull hetaljoshi2425/my-react-app:latest && docker run -d -p 80:80 --name my-react-app hetaljoshi2425/my-react-app:latest" > deployment.log 2>&1
          # ssh -v -i ${{ secrets.SERVER_SSH_KEY }} root@139.84.192.213 "docker pull hetaljoshi2425/my-react-app:latest && docker run -d -p 80:80 --name my-react-app hetaljoshi2425/my-react-app:latest"          # ssh -i ${{ secrets.SERVER_SSH_KEY }} root@139.84.192.213 "docker pull hetaljoshi2425/my-react-app:latest"
          # ssh -i ${{ secrets.SERVER_SSH_KEY }} root@139.84.192.213 "docker run -d -p 80:80 hetaljoshi2425/my-react-app:latest"



# name: Auto Deploy

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v2

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v1

#     - name: Login to Docker Hub
#       uses: docker/login-action@v1
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}

#     - name: Build and Push Docker Image
#       id: docker_build
#       uses: docker/build-push-action@v2
#       with:
#         context: .
#         push: true
#         tags: hetaljoshi2425/my-tst:latest

#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Set up Docker Compose
#       run: |
#         sudo apt-get update
#         sudo apt-get install -y docker-compose


# name: CI/CD with Docker

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Build Docker image
#         run: docker build -t your-image-name .

#       - name: Push Docker image to registry
#         run: |
#           echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
#           docker tag your-image-name hetaljoshi2425/your-image-name
#           docker push hetaljoshi2425/your-image-name

#       - name: SSH into Server and Deploy
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.SERVER_HOST }}
#           username: ${{ secrets.SERVER_USER }}
#           key: ${{ secrets.SERVER_SSH_KEY }}
#           script: |
#             docker stop your-container-name || true
#             docker rm your-container-name || true
#             docker pull your-registry/your-image-name
#             docker run -d -p 80:80 --name your-container-name your-registry/your-image-name



# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up SSH key
#         run: |
#           mkdir -p ~/.ssh
#           echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
#           chmod 600 ~/.ssh/id_rsa
#           ssh-add ~/.ssh/id_rsa
#         env:
#           SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}

#       - name: Build Docker image
#         run: docker build -t your-image-name .

#       - name: Push Docker image to registry
#         run: |
#           echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
#           docker tag your-image-name hetaljoshi2425/your-image-name
#           docker push hetaljoshi2425/your-image-name

#       - name: SSH into Server and Deploy
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.SERVER_HOST }}
#           username: ${{ secrets.SERVER_USER }}
#           key: ${{ secrets.SERVER_SSH_KEY }} # You may not need this line if you're using agent authentication
#           script: |
#             docker stop your-container-name || true
#             docker rm your-container-name || true
#             docker pull your-registry/your-image-name
#             docker run -d -p 80:80 --name your-container-name your-registry/your-image-name


# name: Docker Build and Deploy

# on:
#   push:
#     branches:
#       - main  # Branch jahan se aap deploy karna chahte hain

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v2

#     - name: Login to Docker Hub
#       run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

#     - name: Build Docker Image
#       run: docker build -t hetaljoshi2425/your-repo-name:latest .

#     - name: Push Docker Image
#       run: docker push hetaljoshi2425/your-repo-name:latest

#     - name: SSH Deploy to Server
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.SERVER_HOST }}
#         username: ${{ secrets.SERVER_USERNAME }}
#         key: ${{ secrets.SERVER_SSH_KEY }}
#         script: |
#           docker pull hetaljoshi2425/your-repo-name:latest
#           docker run -d -p 80:80 hetaljoshi2425/your-repo-name:latest
