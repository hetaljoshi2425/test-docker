# # name: Docker Image CI

# # on:
# #   push:
# #     branches: [ "main" ]

# # jobs:

# #   build:

# #     runs-on: ubuntu-latest

# #     steps:
# #     - uses: actions/checkout@v3
# #     - name: Build the Docker image
# #       run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)


# name: CI/CD for React App

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: self-hosted

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Build and push Docker image
#         run: |
#           docker build -t my-react-app:latest .
#           docker tag my-react-app:latest my-docker-registry/my-react-app:latest
#           docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#           docker push my-docker-registry/my-react-app:latest

#       - name: Deploy to Server
#         run: |
#           ssh -i ${{ secrets.SSH_PRIVATE_KEY }} user@your_server_ip "docker pull my-docker-registry/my-react-app:latest"
#           ssh -i ${{ secrets.SSH_PRIVATE_KEY }} user@your_server_ip "docker run -d -p 80:80 my-docker-registry/my-react-app:latest"



# name: Auto Deploy

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v2

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v1

#     - name: Login to Docker Hub
#       uses: docker/login-action@v1
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}

#     - name: Build and Push Docker Image
#       id: docker_build
#       uses: docker/build-push-action@v2
#       with:
#         context: .
#         push: true
#         tags: hetaljoshi2425/my-tst:latest

#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Set up Docker Compose
#       run: |
#         sudo apt-get update
#         sudo apt-get install -y docker-compose




name: CI/CD with Docker

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t your-image-name .

      - name: Push Docker image to registry
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker tag your-image-name your-registry/your-image-name
          docker push your-registry/your-image-name

      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker stop your-container-name || true
            docker rm your-container-name || true
            docker pull your-registry/your-image-name
            docker run -d -p 80:80 --name your-container-name your-registry/your-image-name


