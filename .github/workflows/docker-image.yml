# # name: Docker Image CI

# # on:
# #   push:
# #     branches: [ "main" ]

# # jobs:

# #   build:

# #     runs-on: ubuntu-latest

# #     steps:
# #     - uses: actions/checkout@v3
# #     - name: Build the Docker image
# #       run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)


# name: CI/CD for React App

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: self-hosted

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Build and push Docker image
#         run: |
#           docker build -t my-react-app:latest .
#           docker tag my-react-app:latest my-docker-registry/my-react-app:latest
#           docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#           docker push my-docker-registry/my-react-app:latest

#       - name: Deploy to Server
#         run: |
#           ssh -i ${{ secrets.SSH_PRIVATE_KEY }} user@your_server_ip "docker pull my-docker-registry/my-react-app:latest"
#           ssh -i ${{ secrets.SSH_PRIVATE_KEY }} user@your_server_ip "docker run -d -p 80:80 my-docker-registry/my-react-app:latest"



name: Auto Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: hetaljoshi2425/your-app-name:latest

  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Deploy with Docker Compose
    run: docker-compose -f ./docker-compose.yml up -d

